/******************************************************
 * Contains useful data structures for DNS messaging.
 *
 * Created by: Nick DelBen
 * Created on: June 1, 2019
 ******************************************************/

#ifndef H_DNS_MESSAGE
#define H_DNS_MESSAGE

#include <stdint.h>

// Bitmasks for header info
#define DNS_HEADER_MASK_QR     0x8000 // [1 bit] Whether this message is a query (0), or a response (1)
#define DNS_HEADER_MASK_OPCODE 0x7800 // [4 bits] Kind of query in this message
#define DNS_HEADER_MASK_AA     0x0400 // [1 bit] Responding name server is an authority for the domain name in question section (only responses)
#define DNS_HEADER_MASK_TC     0x0200 // [1 bit] Flag. This message was truncated
#define DNS_HEADER_MASK_RD     0x0100 // [1 bit] Should lookup be done recursively
#define DNS_HEADER_MASK_RA     0x0080 // [1 bit] Whether recursive query support is available in the name server (only responses, always set or clear)
#define DNS_HEADER_MASK_Z      0x0070 // [3 bits] Reserved. (set to 0)
#define DNS_HEADER_MASK_RCODE  0x000F // [4 bit] Response code for dns lookup

// Types of DNS opcodes
#define DNS_OFFSET_OPCODE_QUERY      0x0000
#define DNS_OFFSET_OPCODE_IQUERY     0x0800 
#define DNS_OFFSET_OPCODE_STATUS     0x1000
#define DNS_OFFSET_OPCODE_UNASSIGNED 0x1800
#define DNS_OFFSET_OPCODE_NOTIFY     0x2000
#define DNS_OFFSET_OPCODE_UPDATE     0x2800
#define DNS_OFFSET_OPCODE_DSO        0x3000

// Types of dns response codes
#define DNS_RCODE_NOERROR  0x0000
#define DNS_RCODE_FORMERR  0x0001
#define DNS_RCODE_SERVFAIL 0x0002
#define DNS_RCODE_NXDOMAIN 0x0003
#define DNS_RCODE_NOTIMP   0x0004
#define DNS_RCODE_REFUSED  0x0005

// Defines the header for a dns message
typedef struct
{
	uint16_t id;                // Generated by sender and is copied to reply. 
	uint16_t control;           // Flags and control codes for dns message
	uint16_t question_count;    // Number of entries in the question section
	uint16_t answer_count;      // Number of resource records in the answer section
	uint16_t authority_count;   // Number of name server resource records in the authority records section
	uint16_t additional_count;  // Number of resource records in the additional records section
} dns_header_t;

// Defines a dns message in the system
typedef struct
{
	dns_header_t header;
} dns_message_t;

#endif